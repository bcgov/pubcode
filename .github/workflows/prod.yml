name: Prod Deploy

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy, it would be the latest tag that went into PROD.'
        required: true
        default: 'prod'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploys:
    name: PROD Deployments
    environment: prod
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Deploy
        shell: bash
        run: |
          # Allow pipefail, since we could be catching oc create errors
          set +o pipefail

          # Login to OpenShift (NOTE: project command is a safeguard)
          oc login --token=${{ secrets.oc_token }} --server=${{ vars.oc_server }}
          oc project ${{ vars.oc_namespace }}

          cd charts/pubcode

          # Deploy Helm Chart
          helm dependency update
          helm upgrade --install --wait --atomic pubcode --values values.yaml --set-string global.repository=${{ github.repository }}  --set-string api.containers[0].tag="${{ github.event.inputs.tag }}" --set-string frontend.containers[0].tag="${{ github.event.inputs.tag }}" --set-string global.secrets.emailRecipients="${{ secrets.EMAIL_RECIPIENTS }}" --set-string global.secrets.chesTokenURL="${{ secrets.CHES_TOKEN_URL }}" --set-string global.secrets.chesClientID="${{ secrets.CHES_CLIENT_ID }}" --set-string global.secrets.chesClientSecret="${{ secrets.CHES_CLIENT_SECRET }}" --set-string global.secrets.chesAPIURL="${{ secrets.CHES_API_URL }}" --set-string global.secrets.databaseAdminPassword="${{ secrets.DB_PWD }}" --set-string namespace="${{ vars.oc_namespace }}"  --timeout 5m .
      - name: Create Release
        uses: softprops/action-gh-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          token: ${{ github.token }}
          tag_name: ${{ github.event.inputs.tag }}
          name: Release-${{ github.event.inputs.tag }}
