name: Unit Tests and Analysis

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # tests:
  #   name: Unit Tests
  #   if: github.event_name != 'pull_request' || !github.event.pull_request.draft
  #   runs-on: ubuntu-22.04
  #   strategy:
  #     matrix:
  #       dir: [api, frontend]
  #       include:
  #         - dir: api
  #           sonar_projectKey: bcgov_public-code_api
  #           token: SONAR_TOKEN_BACKEND
  #         - dir: frontend
  #           sonar_projectKey: bcgov_public-code_frontend
  #           token: SONAR_TOKEN_FRONTEND
  #   steps:
  #     - uses: bcgov-nr/action-test-and-analyse@v0.0.1
  #       with:
  #         commands: |
  #           npm ci
  #           npm run test:cov
  #         dir: ${{ matrix.dir }}
  #         sonar_args: >
  #           -Dsonar.exclusions=**/coverage/**,**/node_modules/**
  #           -Dsonar.organization=bcgov-sonarcloud
  #           -Dsonar.project.monorepo.enabled=true
  #           -Dsonar.projectKey=${{ matrix.sonar_projectKey }}
  #         sonar_project_token: ${{ secrets[matrix.token] }}

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy:
    name: Trivy Security Scan
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.11.2
        with:
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          scan-type: "fs"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
