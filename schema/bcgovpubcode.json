{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "product_info": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "product_owner",
        "ministry",
        "program_area",
        "application_acronym",
        "application_name",
        "application_short_description"
      ],
      "properties": {
        "product_owner": {
          "description": "This key contains the full name of one of the product owner. It must be a real person.",
          "type": "string"
        },
        "ministry": {
          "description": "This key contains the ministry name.",
          "type": "array",
          "items": {
            "enum": [
              "HEALTH",
              "EDUC",
              "AG",
              "LWRS",
              "ENV",
              "IRR",
              "EMLI",
              "FOREST"
            ]
          }
        },
        "program_area": {
          "description": "This key contains the program area name. ex: It could be a ministry division branch or section. ",
          "type": "string"
        },
        "application_acronym": {
          "description": "This key contains the application acronym. ex: Infrastructure reporting service the acronym (IRS)",
          "type": "string"
        },
        "application_name": {
          "description": "This key contains the full application name.",
          "type": "string"
        },
        "business_capabilities_standard": {
          "description": "This key contains the business capabilities that are supported by this application. ex: Invoice Management, Customer Relationship Management, Supply Chain Management.",
          "type": "array",
          "items": {
            "enum": [
              "invoice-management",
              "customer-relationship-management",
              "supply-chain-management"
            ]
          }
        },
        "business_capabilities_custom": {
          "description": "This key contains the business capabilities that are supported by this application, which are not available in pick list of `business_capabilities_standard`. Array of string with free text",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "application_short_description": {
          "description": "This key contains a short description of the software. It should be a single line containing a single sentence. Maximum 150 characters are allowed.",
          "type": "string",
          "maxLength": 150
        },
        "application_long_description": {
          "description": "This key contains a longer description of the software, between 500 and 10000 chars. It is meant to provide an overview of the capabilities of the software for a potential user. The audience for this text should be that of users of the software, not developers. You can think of this text as the description of the software that would be in its website (if the software had one).\n\nThis description can contain some basic markdown: *italic*, **bold**, bullet points and [links](#).",
          "type": "string",
          "minLength": 200,
          "maxLength": 10000
        },
        "product_status": {
          "description": "Status of the product. more around this can be found here https://github.com/bcgov/repomountie/blob/master/doc/lifecycle-badges.md",
          "type": "array",
          "items": {
            "enum": [
              "active",
              "stable",
              "maturing",
              "dormant",
              "retired"
            ]
          }
        },
        "product_urls": {
          "description": "Urls of the product.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        }
      }
    },
    "product_technology_info": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "hosting_platforms"
      ],
      "properties": {
        "hosting_platforms": {
          "description": "This key contains the hosting platforms used in this product.",
          "type": "array",
          "items": {
            "enum": [
              "amazon-web-service",
              "openshift-container-platform",
              "microsoft-azure",
              "google-cloud-platform",
              "virtual-servers"
            ]
          }
        },
        "relational_datastore": {
          "description": "This key contains the relational databases used. The main engine behind the relation databases, for ex: cockroach DB uses postgresql, patroni is a distributed flavor of postgresql ",
          "type": "array",
          "items": {
            "enum": [
              "oracle",
              "postgresql",
              "mysql",
              "sqlserver",
              "microsoft-access"
            ]
          }
        },
        "non_relational_datastore": {
          "description": "This key contains the non-relational databases used.",
          "type": "array",
          "items": {
            "enum": [
              "mongodb",
              "dynamodb",
              "redis",
              "memcached",
              "tikv",
              "cassandra"
            ]
          }
        },
        "backend_languages_version": {
          "description": "This key contains the languages used for backends( java or erlang or golang or elixir or rust etc..) with their version",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "backend_frameworks": {
          "description": "This key contains the frameworks used for backends( express or gin or fiber or spring boot or quarkus etc..).",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "frontend_languages": {
          "description": "This key contains the frontend languages.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "frontend_frameworks": {
          "description": "This key contains the frontend frameworks(react or angular or vue et..)",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "spatial_storage_platform": {
          "description": "This key contains the spatial storage platforms used in the stack.",
          "type": "array",
          "items": {
            "enum": [
              "postgis",
              "oracle-spatial",
              "esri-sde",
              "esri-geodatabase"
            ]
          }
        },
        "spatial_mapping_technologies": {
          "description": "This key contains the mapping technologies used in the stack(Leaflet, Geoserver  et..)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "external_dependencies": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "identity_authorization": {
          "description": "This key contains the Identity Integrations and authorization components used in the stack.",
          "type": "array",
          "items": {
            "enum": [
              "IDIR",
              "BceId",
              "Business-BceId",
              "BC-Services-Card",
              "Azure-AD-IDIR",
              "Custom-Keycloak",
              "BCGov-SSO-Keycloak",
              "AWS-Cognito"
            ]
          }
        },
        "notification_standard": {
          "description": "This key contains the notification systems use.",
          "type": "array",
          "items": {
            "enum": [
              "gc-notify",
              "ches",
              "custom-smtp",
              "other"
            ]
          }
        },
        "notification_custom": {
          "description": "This key contains the notification other which is to be filled if the notification does not have the option to fill in.",
          "type": "string",
          "maxLength": 150
        }
      }
    },
    "data_management_roles": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data_custodian": {
          "description": "This key contains the Contact Name who is data custodian for the application/suite of applications.link https://bcgov.github.io/data-publication/pages/dsg_bcdc_roles_responsibilities.html#am-i-a-data-custodian",
          "type": "string"
        },
        "data_steward": {
          "description": "This key contains the Contact Name who is the data steward.",
          "type": "string"
        },
        "data_manager": {
          "description": "This key contains the Contact Name who is the data steward.",
          "type": "string"
        }
      }
    }
  },
  "description": "bcgovpubcode.yml is a metadata standard for repositories containing software developed or acquired by the Public Administration, aimed at making them easily discoverable and thus reusable by other entities. ",
  "properties": {
    "product_information": {
      "description": "This key describes the basic information around product.",
      "type": "object",
      "$ref": "#/definitions/product_info"
    },
    "product_technology_information": {
      "description": "This key describes the basic information around product tech stack.",
      "type": "object",
      "$ref": "#/definitions/product_technology_info"
    },
    "product_external_dependencies": {
      "description": "This key describes the information around external dependencies which the product relies upon.",
      "type": "object",
      "$ref": "#/definitions/external_dependencies"
    },
    "data_management_roles": {
      "description": "This key describes the information around Data Assets.",
      "type": "object",
      "$ref": "#/definitions/data_management_roles"
    },
    "bcgov_pubcode_version": {
      "description": "This key defines which...",
      "type": "number"
    }
  },
  "required": [
    "product_information",
    "product_technology_information",
    "product_external_dependencies",
    "data_management_roles"
  ],
  "title": "JSON schema for bcgovpubcode.yml",
  "type": "object"
}
